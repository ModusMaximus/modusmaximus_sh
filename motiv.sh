#!/bin/bash

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞ .env
create_env_file() {
    echo "üñäÔ∏è–°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ .env..."
    read -p "–í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω –æ—Ç —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞ " TOKEN
    read -p "–í–≤–µ–¥–∏—Ç–µ –∫–∞–Ω–∞–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏" CHANNEL_ID
    read -p "–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö" DB_PSQL
    read -p "–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏" SUPPORT_CONTACT_TG
    read -p "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è –¥–ª—è —Ä–µ—Ñ–æ–≤–æ–¥–æ–≤" REWARD_FOR_REFERRAL

    # –ó–∞–ø–∏—Å—å –≤ .env
    {
        echo "TOKEN=$TOKEN"
        echo "CHANNEL_ID=$CHANNEL_ID"
        echo "DB_PSQL=$DB_PSQL"
        echo "REDIS_HOST=127.0.0.1"
        echo "REDIS_PORT=6380"
        echo "SUPPORT_CONTACT_TG=$SUPPORT_CONTACT_TG"
        echo "REWARD_FOR_REFERRAL=$REWARD_FOR_REFERRAL"
    } > /app/backend/.env

    echo "–ö–æ–Ω—Ñ–∏–≥ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω."
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ docker-compose
start_docker() {
    echo "–ó–∞–ø—É—Å–∫ docker compose..."
    cd /app/backend
    docker compose up -d
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker, –µ—Å–ª–∏ –æ–Ω –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
install_docker() {
  if ! command -v docker &> /dev/null; then
    echo "üê≥ –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ Docker. –ò–Ω–∏—Ü–∏–∏—Ä—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É..."
    sh $HOME/modusmaximus_sh/get-docker.sh || handle_error "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker"
    echo "üê≥ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ."
    sleep 2
  else
    echo "üê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
    sleep 2
  fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, –µ—Å–ª–∏ –æ–Ω —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
clone_or_update_repo() {
  local repo_path="/app/backend"
  local gitssh=git@github.com:ModusMaximus/motivtgbot.git

  echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –ø–æ –ø—É—Ç–∏: $repo_path"
  if [ -d "$repo_path" ]; then
    echo "üìÅ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü–æ–ø—ã—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è..."
    cd "$repo_path" && git pull || handle_error "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"
    echo "üîÑ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω."
    sleep 2
  else
    git clone -b postgre_version "$gitssh" "$repo_path" || handle_error "–ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"
    echo "üéâ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —É—Å–ø–µ—à–Ω–æ —Å–∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω."
    sleep 2
  fi
}

# C–±–æ—Ä–∫–∞
install() {
  echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–±–æ—Ä–∫—É –ø—Ä–æ–µ–∫—Ç–∞"
  install_docker
  clone_or_update_repo
  create_env_file
  start_docker
  echo "üë∑ –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
  sleep 2
}

# –í—ã–≤–æ–¥ –ª–æ–≥–æ–≤
show_logs() {
  echo "üìú –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ª–æ–≥–æ–≤ —Ä–∞–±–æ—Ç—ã –Ω–æ–¥—ã Allora..."
  docker compose -f /app/backend/docker-compose.yml logs -f || handle_error "–í—ã–≤–æ–¥ –ª–æ–≥–æ–≤"
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏
main() {
  print_banner
  local action="$1"

  case "$action" in
    "install")
      install
      ;;
    "update")
      clone_or_update_repo
      ;;
    "show-logs")
      show_logs
      ;;
    *)
      echo "‚ö†Ô∏è –£–∫–∞–∑–∞–Ω–æ –Ω–µ–≤–µ—Ä–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ: $action. –î–æ—Å—Ç—É–ø–Ω—ã–µ –æ–ø—Ü–∏–∏: 'install', 'update', 'show-logs', "
      exit 2
      ;;
  esac
}

# –ó–∞–ø—É—Å–∫–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é —Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
main "$@"